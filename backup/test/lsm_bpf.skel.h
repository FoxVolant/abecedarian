/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __LSM_BPF_SKEL_H__
#define __LSM_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct lsm_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *inner_map;
		struct bpf_map *outer_arr;
		struct bpf_map *outer_hash;
		struct bpf_map *array;
		struct bpf_map *hash;
		struct bpf_map *lru_hash;
		struct bpf_map *percpu_array;
		struct bpf_map *percpu_hash;
		struct bpf_map *lru_percpu_hash;
	} maps;
	struct {
		struct bpf_program *handle_cred_prepare;
	} progs;
	struct {
		struct bpf_link *handle_cred_prepare;
	} links;
};

static void
lsm_bpf__destroy(struct lsm_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
lsm_bpf__create_skeleton(struct lsm_bpf *obj);

static inline struct lsm_bpf *
lsm_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct lsm_bpf *obj;
	int err;

	obj = (struct lsm_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = lsm_bpf__create_skeleton(obj);
	err = err ?: bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	lsm_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct lsm_bpf *
lsm_bpf__open(void)
{
	return lsm_bpf__open_opts(NULL);
}

static inline int
lsm_bpf__load(struct lsm_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct lsm_bpf *
lsm_bpf__open_and_load(void)
{
	struct lsm_bpf *obj;
	int err;

	obj = lsm_bpf__open();
	if (!obj)
		return NULL;
	err = lsm_bpf__load(obj);
	if (err) {
		lsm_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
lsm_bpf__attach(struct lsm_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
lsm_bpf__detach(struct lsm_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
lsm_bpf__create_skeleton(struct lsm_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;

	s->sz = sizeof(*s);
	s->name = "lsm_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 9;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "inner_map";
	s->maps[0].map = &obj->maps.inner_map;

	s->maps[1].name = "outer_arr";
	s->maps[1].map = &obj->maps.outer_arr;

	s->maps[2].name = "outer_hash";
	s->maps[2].map = &obj->maps.outer_hash;

	s->maps[3].name = "array";
	s->maps[3].map = &obj->maps.array;

	s->maps[4].name = "hash";
	s->maps[4].map = &obj->maps.hash;

	s->maps[5].name = "lru_hash";
	s->maps[5].map = &obj->maps.lru_hash;

	s->maps[6].name = "percpu_array";
	s->maps[6].map = &obj->maps.percpu_array;

	s->maps[7].name = "percpu_hash";
	s->maps[7].map = &obj->maps.percpu_hash;

	s->maps[8].name = "lru_percpu_hash";
	s->maps[8].map = &obj->maps.lru_percpu_hash;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "handle_cred_prepare";
	s->progs[0].prog = &obj->progs.handle_cred_prepare;
	s->progs[0].link = &obj->links.handle_cred_prepare;

	s->data_sz = 5648;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xd0\x12\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0d\0\
\x0c\0\x79\x16\x18\0\0\0\0\0\xbf\x61\0\0\0\0\0\0\x67\x01\0\0\x20\0\0\0\x77\x01\
\0\0\x20\0\0\0\x55\x01\x22\0\0\0\0\0\x85\0\0\0\x9e\0\0\0\xbf\x06\0\0\0\0\0\0\
\xbf\x61\0\0\0\0\0\0\x85\0\0\0\xaf\0\0\0\x79\x61\x08\0\0\0\0\0\xb7\x02\0\0\0\0\
\0\0\xbf\x13\0\0\0\0\0\0\x0f\x23\0\0\0\0\0\0\x61\x11\0\0\0\0\0\0\x61\x32\x04\0\
\0\0\0\0\x67\x02\0\0\x20\0\0\0\x4f\x12\0\0\0\0\0\0\x79\x01\x08\0\0\0\0\0\x7b\
\x2a\xf8\xff\0\0\0\0\xb7\x06\0\0\0\0\0\0\x67\x01\0\0\x20\0\0\0\x77\x01\0\0\x20\
\0\0\0\x55\x01\x10\0\x10\x01\0\0\xb7\x01\0\0\0\0\0\0\x0f\x10\0\0\0\0\0\0\xbf\
\xa1\0\0\0\0\0\0\x07\x01\0\0\xf0\xff\xff\xff\xb7\x02\0\0\x08\0\0\0\xbf\x03\0\0\
\0\0\0\0\x85\0\0\0\x71\0\0\0\x79\xa1\xf0\xff\0\0\0\0\x57\x01\0\0\0\0\0\x10\x15\
\x01\x06\0\0\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\xf8\xff\xff\xff\x61\x16\0\0\
\0\0\0\0\x77\x06\0\0\x15\0\0\0\x57\x06\0\0\x01\0\0\0\x07\x06\0\0\xff\xff\xff\
\xff\xbf\x60\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x47\x50\x4c\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x54\x06\0\0\x54\x06\0\
\0\x6c\x03\0\0\x01\0\0\0\x04\0\0\x04\x20\0\0\0\x0b\0\0\0\x02\0\0\0\0\0\0\0\x10\
\0\0\0\x06\0\0\0\x40\0\0\0\x1c\0\0\0\x08\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\0\
\xc0\0\0\0\0\0\0\0\0\0\0\x02\x04\0\0\0\x26\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\
\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x02\0\0\0\x2a\0\0\0\0\0\0\
\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x07\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\
\x03\0\0\0\x05\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\0\0\0\0\0\0\0\x02\
\x0a\0\0\0\x3e\0\0\0\0\0\0\x08\x0b\0\0\0\x44\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\
\0\x01\0\0\0\0\0\0\x0e\x01\0\0\0\x01\0\0\0\x5b\0\0\0\x05\0\0\x04\x20\0\0\0\x0b\
\0\0\0\x0e\0\0\0\0\0\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x65\0\0\0\x10\0\0\0\x80\
\0\0\0\x6e\0\0\0\x10\0\0\0\xc0\0\0\0\x79\0\0\0\x13\0\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\x02\x0f\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x0c\0\0\0\0\0\0\
\0\0\0\0\x02\x11\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x04\0\0\0\
\0\0\0\0\0\0\0\x02\x01\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x12\0\0\0\x05\0\0\0\0\0\
\0\0\x5b\0\0\0\0\0\0\x0e\x0d\0\0\0\x01\0\0\0\x80\0\0\0\x04\0\0\x04\x18\0\0\0\
\x0b\0\0\0\x16\0\0\0\0\0\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x65\0\0\0\x10\0\0\0\
\x80\0\0\0\x79\0\0\0\x13\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x17\0\0\0\0\0\0\0\0\
\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x0d\0\0\0\x80\0\0\0\0\0\0\x0e\x15\0\0\0\
\x01\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x0b\0\0\0\x02\0\0\0\0\0\0\0\x10\0\0\0\
\x06\0\0\0\x40\0\0\0\x1c\0\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\0\xc0\0\0\
\0\0\0\0\0\0\0\0\x02\x1b\0\0\0\x8b\0\0\0\0\0\0\x08\x1c\0\0\0\x91\0\0\0\0\0\0\
\x01\x04\0\0\0\x20\0\0\0\x9e\0\0\0\0\0\0\x0e\x19\0\0\0\x01\0\0\0\0\0\0\0\x04\0\
\0\x04\x20\0\0\0\x0b\0\0\0\x06\0\0\0\0\0\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x1c\
\0\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\0\xc0\0\0\0\xa4\0\0\0\0\0\0\x0e\
\x1e\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x0b\0\0\0\x21\0\0\0\0\0\0\0\
\x10\0\0\0\x06\0\0\0\x40\0\0\0\x1c\0\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\
\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x22\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\
\x05\0\0\0\x09\0\0\0\xa9\0\0\0\0\0\0\x0e\x20\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\
\x04\x20\0\0\0\x0b\0\0\0\x25\0\0\0\0\0\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x1c\0\
\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x26\0\
\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x06\0\0\0\xb2\0\0\0\0\0\0\
\x0e\x24\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x0b\0\0\0\x29\0\0\0\0\0\
\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x1c\0\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\
\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x2a\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\
\0\x05\0\0\0\x05\0\0\0\xbf\0\0\0\0\0\0\x0e\x28\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\
\x04\x20\0\0\0\x0b\0\0\0\x2d\0\0\0\0\0\0\0\x10\0\0\0\x06\0\0\0\x40\0\0\0\x1c\0\
\0\0\x1a\0\0\0\x80\0\0\0\x20\0\0\0\x09\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x2e\0\
\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x0a\0\0\0\xcb\0\0\0\0\0\0\
\x0e\x2c\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0b\0\0\0\0\0\0\0\x01\0\0\x0d\x03\0\
\0\0\xdb\0\0\0\x30\0\0\0\xdf\0\0\0\x01\0\0\x0c\x31\0\0\0\xd5\x01\0\0\x02\0\0\
\x04\x10\0\0\0\xe1\x01\0\0\x1c\0\0\0\0\0\0\0\xe7\x01\0\0\x34\0\0\0\x40\0\0\0\0\
\0\0\0\0\0\0\x02\x35\0\0\0\0\0\0\0\0\0\0\x0a\x36\0\0\0\xe7\x01\0\0\x01\0\0\x04\
\x08\0\0\0\x16\x02\0\0\x37\0\0\0\0\0\0\0\x24\x02\0\0\0\0\0\x08\x38\0\0\0\x31\
\x02\0\0\x01\0\0\x04\x08\0\0\0\x43\x02\0\0\x39\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\0\x1b\0\0\0\x05\0\0\0\x02\0\0\0\x4b\x02\0\0\x02\0\0\x04\x10\0\0\0\x53\
\x02\0\0\x3b\0\0\0\0\0\0\0\x56\x02\0\0\x3b\0\0\0\x40\0\0\0\x5e\x02\0\0\0\0\0\
\x01\x08\0\0\0\x40\0\0\0\x51\x03\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\
\0\0\x03\0\0\0\0\x3c\0\0\0\x05\0\0\0\x04\0\0\0\x56\x03\0\0\0\0\0\x0e\x3d\0\0\0\
\x01\0\0\0\x5e\x03\0\0\x09\0\0\x0f\0\0\0\0\x0c\0\0\0\0\0\0\0\x20\0\0\0\x14\0\0\
\0\0\0\0\0\x28\0\0\0\x18\0\0\0\0\0\0\0\x20\0\0\0\x1d\0\0\0\0\0\0\0\x20\0\0\0\
\x1f\0\0\0\0\0\0\0\x20\0\0\0\x23\0\0\0\0\0\0\0\x20\0\0\0\x27\0\0\0\0\0\0\0\x20\
\0\0\0\x2b\0\0\0\0\0\0\0\x20\0\0\0\x2f\0\0\0\0\0\0\0\x20\0\0\0\x64\x03\0\0\x01\
\0\0\x0f\0\0\0\0\x3e\0\0\0\0\0\0\0\x04\0\0\0\0\x69\x6e\x6e\x65\x72\x5f\x6d\x61\
\x70\0\x74\x79\x70\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6b\x65\
\x79\0\x76\x61\x6c\x75\x65\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\
\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x5f\x5f\x75\x36\x34\0\x6c\x6f\x6e\
\x67\x20\x6c\x6f\x6e\x67\x20\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\
\x6f\x75\x74\x65\x72\x5f\x61\x72\x72\0\x6b\x65\x79\x5f\x73\x69\x7a\x65\0\x76\
\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x73\0\x6f\x75\x74\
\x65\x72\x5f\x68\x61\x73\x68\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x69\x6e\x74\0\x61\x72\x72\x61\x79\0\x68\x61\x73\x68\0\x6c\x72\x75\
\x5f\x68\x61\x73\x68\0\x70\x65\x72\x63\x70\x75\x5f\x61\x72\x72\x61\x79\0\x70\
\x65\x72\x63\x70\x75\x5f\x68\x61\x73\x68\0\x6c\x72\x75\x5f\x70\x65\x72\x63\x70\
\x75\x5f\x68\x61\x73\x68\0\x63\x74\x78\0\x68\x61\x6e\x64\x6c\x65\x5f\x63\x72\
\x65\x64\x5f\x70\x72\x65\x70\x61\x72\x65\0\x6c\x73\x6d\x2f\x63\x72\x65\x64\x5f\
\x70\x72\x65\x70\x61\x72\x65\0\x2f\x68\x6f\x6d\x65\x2f\x73\x68\x69\x2f\x74\x65\
\x73\x74\x2f\x6c\x73\x6d\x5f\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x42\x50\x46\
\x5f\x50\x52\x4f\x47\x28\x68\x61\x6e\x64\x6c\x65\x5f\x63\x72\x65\x64\x5f\x70\
\x72\x65\x70\x61\x72\x65\x2c\x20\x73\x74\x72\x75\x63\x74\x20\x63\x72\x65\x64\
\x20\x2a\x6e\x65\x77\x2c\x20\x63\x6f\x6e\x73\x74\x20\x73\x74\x72\x75\x63\x74\
\x20\x63\x72\x65\x64\x20\x2a\x6f\x6c\x64\x2c\0\x20\x20\x20\x20\x69\x66\x20\x28\
\x72\x65\x74\x29\x20\x7b\0\x20\x20\x20\x20\x74\x61\x73\x6b\x20\x3d\x20\x62\x70\
\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x74\x61\x73\x6b\x5f\
\x62\x74\x66\x28\x29\x3b\0\x20\x20\x20\x20\x72\x65\x67\x73\x20\x3d\x20\x28\x73\
\x74\x72\x75\x63\x74\x20\x70\x74\x5f\x72\x65\x67\x73\x20\x2a\x29\x20\x62\x70\
\x66\x5f\x74\x61\x73\x6b\x5f\x70\x74\x5f\x72\x65\x67\x73\x28\x74\x61\x73\x6b\
\x29\x3b\0\x74\x61\x73\x6b\x5f\x73\x74\x72\x75\x63\x74\0\x66\x6c\x61\x67\x73\0\
\x63\x72\x65\x64\0\x30\x3a\x31\0\x20\x20\x20\x20\x63\x61\x70\x73\x20\x3d\x20\
\x74\x61\x73\x6b\x2d\x3e\x63\x72\x65\x64\x2d\x3e\x63\x61\x70\x5f\x65\x66\x66\
\x65\x63\x74\x69\x76\x65\x3b\0\x63\x61\x70\x5f\x65\x66\x66\x65\x63\x74\x69\x76\
\x65\0\x6b\x65\x72\x6e\x65\x6c\x5f\x63\x61\x70\x5f\x74\0\x6b\x65\x72\x6e\x65\
\x6c\x5f\x63\x61\x70\x5f\x73\x74\x72\x75\x63\x74\0\x63\x61\x70\0\x30\x3a\x30\0\
\x70\x74\x5f\x72\x65\x67\x73\0\x64\x69\0\x6f\x72\x69\x67\x5f\x61\x78\0\x6c\x6f\
\x6e\x67\x20\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x20\x20\x20\x20\
\x73\x79\x73\x63\x61\x6c\x6c\x20\x3d\x20\x72\x65\x67\x73\x2d\x3e\x6f\x72\x69\
\x67\x5f\x61\x78\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x73\x79\x73\x63\x61\x6c\
\x6c\x20\x21\x3d\x20\x55\x4e\x53\x48\x41\x52\x45\x5f\x53\x59\x53\x43\x41\x4c\
\x4c\x29\x20\x7b\0\x20\x20\x20\x20\x66\x6c\x61\x67\x73\x20\x3d\x20\x50\x54\x5f\
\x52\x45\x47\x53\x5f\x50\x41\x52\x4d\x31\x5f\x43\x4f\x52\x45\x28\x72\x65\x67\
\x73\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x21\x28\x66\x6c\x61\x67\x73\x20\
\x26\x20\x43\x4c\x4f\x4e\x45\x5f\x4e\x45\x57\x55\x53\x45\x52\x29\x29\x20\x7b\0\
\x20\x20\x20\x20\x69\x66\x20\x28\x63\x61\x70\x73\x2e\x63\x61\x70\x5b\x43\x41\
\x50\x5f\x54\x4f\x5f\x49\x4e\x44\x45\x58\x28\x43\x41\x50\x5f\x53\x59\x53\x5f\
\x41\x44\x4d\x49\x4e\x29\x5d\x20\x26\x20\x43\x41\x50\x5f\x54\x4f\x5f\x4d\x41\
\x53\x4b\x28\x43\x41\x50\x5f\x53\x59\x53\x5f\x41\x44\x4d\x49\x4e\x29\x29\x20\
\x7b\0\x30\x3a\x30\x3a\x30\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\x4e\x53\x45\0\
\x2e\x6d\x61\x70\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\x9f\xeb\x01\0\x20\0\0\0\0\
\0\0\0\x14\0\0\0\x14\0\0\0\x2c\x01\0\0\x40\x01\0\0\x6c\0\0\0\x08\0\0\0\xf3\0\0\
\0\x01\0\0\0\0\0\0\0\x32\0\0\0\x10\0\0\0\xf3\0\0\0\x12\0\0\0\0\0\0\0\x04\x01\0\
\0\x1d\x01\0\0\x05\xc8\x02\0\x20\0\0\0\x04\x01\0\0\x69\x01\0\0\x09\xf0\x02\0\
\x28\0\0\0\x04\x01\0\0\x78\x01\0\0\x0c\0\x03\0\x38\0\0\0\x04\x01\0\0\x9f\x01\0\
\0\x1f\x04\x03\0\x48\0\0\0\x04\x01\0\0\xf0\x01\0\0\x12\x10\x03\0\x68\0\0\0\x04\
\x01\0\0\xf0\x01\0\0\x18\x10\x03\0\x88\0\0\0\x04\x01\0\0\x70\x02\0\0\x15\x0c\
\x03\0\x90\0\0\0\x04\x01\0\0\xf0\x01\0\0\x18\x10\x03\0\xa0\0\0\0\x04\x01\0\0\
\x70\x02\0\0\x0f\x0c\x03\0\xb0\0\0\0\x04\x01\0\0\x8d\x02\0\0\x09\x1c\x03\0\xd0\
\0\0\0\x04\x01\0\0\0\0\0\0\0\0\0\0\xd8\0\0\0\x04\x01\0\0\xb3\x02\0\0\x0d\x30\
\x03\0\xf0\0\0\0\x04\x01\0\0\xb3\x02\0\0\x0d\x30\x03\0\xf8\0\0\0\x04\x01\0\0\
\xd9\x02\0\0\x11\x3c\x03\0\0\x01\0\0\x04\x01\0\0\xd9\x02\0\0\x09\x3c\x03\0\x10\
\x01\0\0\x04\x01\0\0\xfd\x02\0\0\x09\x50\x03\0\x20\x01\0\0\x04\x01\0\0\0\0\0\0\
\0\0\0\0\x38\x01\0\0\x04\x01\0\0\x1d\x01\0\0\x05\xc8\x02\0\x10\0\0\0\xf3\0\0\0\
\x06\0\0\0\x48\0\0\0\x33\0\0\0\xec\x01\0\0\0\0\0\0\x50\0\0\0\x36\0\0\0\x47\x02\
\0\0\0\0\0\0\x68\0\0\0\x36\0\0\0\x47\x02\0\0\0\0\0\0\x88\0\0\0\x3a\0\0\0\xec\
\x01\0\0\0\0\0\0\xb8\0\0\0\x3a\0\0\0\x47\x02\0\0\0\0\0\0\x18\x01\0\0\x38\0\0\0\
\x4b\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbf\0\0\0\
\0\0\x02\0\x38\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xb7\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\
\x08\0\0\0\x11\0\x03\0\x68\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x79\0\0\0\x12\0\x02\
\0\0\0\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\x5e\0\0\0\x11\0\x03\0\x88\0\0\0\0\0\0\0\
\x20\0\0\0\0\0\0\0\x35\0\0\0\x11\0\x03\0\0\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x3f\
\0\0\0\x11\0\x03\0\xa8\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x48\0\0\0\x11\0\x03\0\
\x08\x01\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x2b\0\0\0\x11\0\x03\0\x20\0\0\0\0\0\0\0\
\x28\0\0\0\0\0\0\0\x58\0\0\0\x11\0\x03\0\x48\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x01\0\0\0\x11\0\x03\0\xc8\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x4c\0\0\0\x11\0\x03\
\0\xe8\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\
\x60\0\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\xec\x05\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\
\xf8\x05\0\0\0\0\0\0\0\0\0\0\x0a\0\0\0\x04\x06\0\0\0\0\0\0\0\0\0\0\x0b\0\0\0\
\x10\x06\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x1c\x06\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\
\x28\x06\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\x34\x06\0\0\0\0\0\0\0\0\0\0\x0c\0\0\0\
\x40\x06\0\0\0\0\0\0\0\0\0\0\x0d\0\0\0\x4c\x06\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\
\x64\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x2c\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x60\0\0\0\
\0\0\0\0\0\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\
\0\0\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\0\0\
\0\0\x02\0\0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\0\
\x02\0\0\0\xd0\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\xe0\0\0\0\0\0\0\0\0\0\0\0\x02\0\
\0\0\xf0\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\x10\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x20\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\x30\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x40\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\x50\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x6c\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\x7c\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x8c\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\x9c\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\xac\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\
\xbc\x01\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x41\x43\x46\x47\x3f\x40\x42\x44\x48\x49\
\x45\0\x70\x65\x72\x63\x70\x75\x5f\x61\x72\x72\x61\x79\0\x2e\x74\x65\x78\x74\0\
\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x6d\x61\
\x70\x73\0\x6f\x75\x74\x65\x72\x5f\x61\x72\x72\0\x69\x6e\x6e\x65\x72\x5f\x6d\
\x61\x70\0\x6c\x72\x75\x5f\x68\x61\x73\x68\0\x6c\x72\x75\x5f\x70\x65\x72\x63\
\x70\x75\x5f\x68\x61\x73\x68\0\x6f\x75\x74\x65\x72\x5f\x68\x61\x73\x68\0\x2e\
\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\x65\
\0\x68\x61\x6e\x64\x6c\x65\x5f\x63\x72\x65\x64\x5f\x70\x72\x65\x70\x61\x72\x65\
\0\x6c\x73\x6d\x2f\x63\x72\x65\x64\x5f\x70\x72\x65\x70\x61\x72\x65\0\x2e\x73\
\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\
\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\x4c\x42\x42\x30\x5f\x34\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0e\0\0\0\x01\0\0\0\x06\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8d\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x40\0\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x25\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\
\x01\0\0\0\0\0\0\x28\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x71\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\x02\0\0\0\0\
\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb2\0\
\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\x02\0\0\0\0\0\0\xd8\x09\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8c\x0c\0\0\0\0\0\0\xcc\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa6\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x58\x0e\0\0\0\0\0\0\x50\x01\0\0\0\0\0\0\x0c\0\0\0\x03\0\0\0\
\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x21\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\xa8\x0f\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x07\0\0\0\x03\0\0\0\x08\0\0\0\
\0\0\0\0\x10\0\0\0\0\0\0\0\xae\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xc8\x0f\0\0\0\0\0\0\xa0\0\0\0\0\0\0\0\x07\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x14\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x10\
\0\0\0\0\0\0\x90\x01\0\0\0\0\0\0\x07\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\
\0\0\0\0\0\x63\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x11\
\0\0\0\0\0\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x9e\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x12\0\0\0\0\0\0\xc6\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

#endif /* __LSM_BPF_SKEL_H__ */
